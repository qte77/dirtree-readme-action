---
name: write-dirtree-to-file
on:
  #schedule:
    # https://crontab.guru/every-day
    #- cron: "0 0 * * *"
  workflow_dispatch:
env:
  OUT_FILE: 'data/dummy-dirtree-python.md'
  EXCLUDE: '.git'
jobs:
  writeDirtreeToFile:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev-refactor-to-python
          sparse-checkout: ${{ env.OUT_FILE }}
      #    sparse-checkout-cone-mode: false
      - name: Save dirtree to file
        shell: python
        run: |
          import os
          OUT_FILE = str(os.getenv("OUT_FILE"))
          k = 0
          exclude = ".git"
          if not os.path.exists(OUT_FILE):
            # folder needs to exist before open() context
            os.makedirs(os.path.dirname(OUT_FILE), exist_ok=True)
            with open(OUT_FILE, 'w+', newline='', encoding='UTF8') as f:
                f.write("")
          for dirname, dirnames, filenames in os.walk('.'):
            indent = " " * (k+1)
            indent_f = " " * (k+2)
            if exclude in dirnames:
              dirnames.remove(exclude)
            for subdirname in dirnames:
              dir = os.path.join(dirname, subdirname)
              with open(OUT_FILE, 'a', encoding='UTF8', newline='\n') as f:
                f.write(f"{indent}{dir}\n")
            for filename in filenames:
              file = os.path.join(dirname, filename)
              with open(OUT_FILE, 'a', encoding='UTF8', newline='\n') as f:
                f.write(f"{indent_f}{file}\n")
      - name: Push updated file back to main branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "$OUT_FILE"
          git commit -m "Updated $OUT_FILE"
          git push
...
